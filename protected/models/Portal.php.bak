<?php

/**
 * This is the model class for table "tbl_portal".
 *
 * The followings are the available columns in table 'tbl_portal':
 * @property integer $id
 * @property integer $user_id
 */
class Portal extends CActiveRecord
{
	/**
	 * Returns the static model of the specified AR class.
	 * @return Portal the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}

	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'tbl_portal';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('title', 'length', 'max'=>200),
			// The following rule is used by search().
			// Please remove those attributes that should not be searched.
            array('title', 'safe'),
			array('landing_url', 'length', 'max'=>2048),
			array('auth_message', 'length', 'max'=>140),
            array('background', 'file', 'types'=>'jpg, gif, png', 
                                  'maxSize'=>1024 * 1024, // 1MB
                                  'tooLarge'=>'The file was larger than 1MB. Please upload a smaller file.'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
            'sponsors' => array(self::HAS_MANY, 'Sponsor', 'portal_id',
                                'order'=>'name ASC')
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'title' => 'Title',
			'background' => 'Background Image',
			'landing_url' => 'Landing Page URL',
			'auth_message' => 'SMS Authentication Message'
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.
	 */
	public function search()
	{
		// Warning: Please modify the following code to remove attributes that
		// should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('title',$this->title);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}
}